<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="matrix.project.mall.mapper.GoodsMapper">
    <select id="countGoods" resultType="java.lang.Integer">
        SELECT COUNT(1)
        FROM goods g JOIN atoms_goods ag ON g.ATOMS_GOODS_ID = ag.ATOMS_GOODS_ID
        WHERE ag.STATUS != -1 and ag.SHOP_ID = #{shopId} and g.STATUS != -1
        <if test="item.status != null">
            and g.STATUS = #{item.status}
        </if>
        <if test="item.atomsGoodsName != null and item.atomsGoodsName != ''">
            and ag.ATOMS_GOODS_NAME like concat('%', #{item.atomsGoodsName}, '%')
        </if>
    </select>
    <select id="listGoods" resultType="matrix.project.mall.dto.GoodsDto">
        SELECT
        g.GOODS_ID as goodsId,
        g.ATOMS_GOODS_ID as atomsGoodsId,
        CONCAT(ag.ATOMS_GOODS_NAME, ' ', GROUP_CONCAT(gs.SKU_VALUE order by agkl.ORDER_BY)) as goodsName,
        g.ORIGIN_PRICE as originPrice,
        g.SALE_PRICE as salePrice,
        g.STOCK as stock,
        g.IMAGE_URL as imageUrl,
        g.CREATE_TIME as createTime,
        g.UPDATE_TIME as updateTime,
        g.`STATUS` as status
        FROM goods g
        JOIN atoms_goods ag ON g.ATOMS_GOODS_ID = ag.ATOMS_GOODS_ID
        LEFT JOIN goods_sku gs ON gs.GOODS_ID = g.GOODS_ID AND gs.`STATUS` = 1
        left join atoms_goods_sku_label agkl on agkl.ID = gs.ATOMS_GOODS_SKU_LABEL_ID
        WHERE ag.STATUS != -1 and ag.SHOP_ID = #{shopId} and g.STATUS != -1
        <if test="item.status != null">
            and g.STATUS = #{item.status}
        </if>
        <if test="item.atomsGoodsName != null and item.atomsGoodsName != ''">
            and ag.ATOMS_GOODS_NAME like concat('%', #{item.atomsGoodsName}, '%')
        </if>
        GROUP BY g.GOODS_ID
        ORDER BY ag.UPDATE_TIME, g.UPDATE_TIME
    </select>
    <select id="getGoods" resultType="matrix.project.mall.dto.GoodsDto">
        SELECT g.GOODS_ID                                                                          as goodsId,
               g.ATOMS_GOODS_ID                                                                    as atomsGoodsId,
               ag.ATOMS_GOODS_NAME                                                                 as atomsGoodsName,
               CONCAT(ag.ATOMS_GOODS_NAME, ' ', GROUP_CONCAT(gs.SKU_VALUE order by agkl.ORDER_BY)) as goodsName,
               g.ORIGIN_PRICE                                                                      as originPrice,
               g.SALE_PRICE                                                                        as salePrice,
               g.STOCK                                                                             as stock,
               g.IMAGE_URL                                                                         as imageUrl,
               g.CREATE_TIME                                                                       as createTime,
               g.UPDATE_TIME                                                                       as updateTime,
               g.`STATUS`                                                                          as status
        FROM goods g
                 JOIN atoms_goods ag ON g.ATOMS_GOODS_ID = ag.ATOMS_GOODS_ID
                 LEFT JOIN goods_sku gs ON gs.GOODS_ID = g.GOODS_ID AND gs.`STATUS` = 1
                 left join atoms_goods_sku_label agkl on agkl.ID = gs.ATOMS_GOODS_SKU_LABEL_ID
        WHERE ag.STATUS != -1
          and ag.SHOP_ID = #{shopId}
          and g.STATUS != -1
          and g.GOODS_ID = #{goodsId}
        GROUP BY g.GOODS_ID
    </select>

    <select id="skuLabels" resultType="matrix.project.mall.dto.SkuDto$SkuLabelDto">
        select DISTINCT agsl.ID as labelId, agsl.SKU_NAME as labelName, gs.SKU_VALUE as skuValue
        from atoms_goods_sku_label agsl
                 left join goods_sku gs on gs.ATOMS_GOODS_SKU_LABEL_ID = agsl.ID and gs.STATUS = 1
        where agsl.ATOMS_GOODS_ID = #{atomsGoodsId}
          and agsl.STATUS = 1
        order by agsl.ORDER_BY, gs.CREATE_TIME
    </select>

    <select id="queryGoodsIdBySkuLabel" resultType="java.lang.String">
        select gs.GOODS_ID
        from goods_sku gs
        where gs.STATUS = 1
        <foreach collection="list" item="item" open="and (" close=")" separator=" or ">
            (gs.ATOMS_GOODS_SKU_LABEL_ID = #{item.labelId} and gs.SKU_VALUE = #{item.skuValue})
        </foreach>
        group by gs.GOODS_ID
        having count(1) = #{length}
    </select>
    <select id="attrLabels" resultType="matrix.project.mall.dto.AttrDto">
        select DISTINCT agal.ID as labelId, agal.ATTR_NAME as labelName, ga.ATTR_VALUE as attrValue
        from atoms_goods_attr_label agal
                 left join goods_attr ga
                           on ga.ATOMS_GOODS_ATTR_LABEL_ID = agal.ID and ga.STATUS = 1 and ga.GOODS_ID = #{goodsId}
        where agal.ATOMS_GOODS_ID = #{atomsGoodsId}
          and agal.STATUS = 1
        order by agal.ORDER_BY
    </select>

    <select id="goodsNameList" resultType="matrix.project.mall.dto.GoodsNameDto">
        SELECT g.GOODS_ID as goodsId,
        ag.ATOMS_GOODS_NAME as atomsGoodsName,
        CONCAT(ag.ATOMS_GOODS_NAME, ' ', GROUP_CONCAT(gs.SKU_VALUE order by agkl.ORDER_BY)) as goodsName
        FROM goods g
        JOIN atoms_goods ag ON g.ATOMS_GOODS_ID = ag.ATOMS_GOODS_ID
        LEFT JOIN goods_sku gs ON gs.GOODS_ID = g.GOODS_ID AND gs.`STATUS` = 1
        left join atoms_goods_sku_label agkl on agkl.ID = gs.ATOMS_GOODS_SKU_LABEL_ID
        WHERE ag.STATUS != -1
        and g.STATUS != -1
        and g.GOODS_ID in
        <foreach collection="goodsIds" item="goodsId" open="(" close=")" separator=",">
            #{goodsId}
        </foreach>
        GROUP BY g.GOODS_ID
    </select>
</mapper>